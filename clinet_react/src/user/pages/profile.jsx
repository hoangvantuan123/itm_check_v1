import { useState, useCallback, useEffect } from 'react'
import { useTranslation } from 'react-i18next'
import { Helmet } from 'react-helmet'
import { Input, Space, Table, Typography, message, Tabs, Avatar, Dropdown,Menu } from 'antd'
import { useDispatch, useSelector } from 'react-redux'
const { Search } = Input
import decodeJWT from '../../utils/decode-JWT'
const { Title, Text } = Typography
const { TabPane } = Tabs
import 'moment/locale/vi'
import './static/css/scroll_container.css'
import DefaultAvatar from '../../assets/default-avatar.png'
import PhoneGeneralSettings from './phoneGeneralSettings'
import KeyMenu02 from '../components/auth/menu-key/key-02'
import { Link } from 'react-router-dom'
import KeyMenu03 from '../components/auth/menu-key/key-03'
const SettingIcon = () => {
  return (
    <svg
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      id="Settings--Streamline-Solar-Ar"
      className="w-6 h-6 opacity-65 "
    >
      <path
        stroke="#000000"
        d="M8.7181 12C8.7181 14.5264 11.453 16.1054 13.6409 14.8422C14.6563 14.2559 15.2819 13.1725 15.2819 12C15.2819 9.4736 12.547 7.8946 10.3591 9.1578C9.3437 9.7441 8.7181 10.8275 8.7181 12"
        strokeWidth="1.5"
      ></path>
      <path
        d="M13.9313 1.227C13.5291 1.0605 13.0195 1.0605 12 1.0605C10.9805 1.0605 10.4709 1.0605 10.0687 1.227C9.5327 1.4491 9.1067 1.875 8.8847 2.4111C8.7833 2.6558 8.7436 2.9404 8.7281 3.3556C8.7053 3.9657 8.3924 4.5304 7.8637 4.8356C7.335 5.1409 6.6895 5.1295 6.1497 4.8442C5.7825 4.6501 5.5161 4.5421 5.2535 4.5075C4.6782 4.4318 4.0964 4.5877 3.636 4.9409C3.2908 5.2059 3.0359 5.6473 2.5262 6.5302C2.0165 7.413 1.7616 7.8544 1.7048 8.2859C1.6291 8.8612 1.785 9.4431 2.1382 9.9034C2.2994 10.1136 2.526 10.2901 2.8777 10.5111C3.3947 10.836 3.7274 11.3895 3.7274 12C3.7273 12.6105 3.3947 13.1639 2.8777 13.4886C2.526 13.7097 2.2993 13.8864 2.1381 14.0966C1.7848 14.5569 1.6289 15.1387 1.7047 15.714C1.7615 16.1454 2.0164 16.5869 2.5261 17.4698C3.0358 18.3526 3.2907 18.7941 3.6359 19.059C4.0963 19.4122 4.6781 19.5681 5.2534 19.4924C5.516 19.4578 5.7823 19.3498 6.1496 19.1558C6.6894 18.8705 7.3349 18.8591 7.8637 19.1643C8.3924 19.4696 8.7053 20.0343 8.7281 20.6445C8.7436 21.0596 8.7833 21.3442 8.8847 21.5889C9.1067 22.125 9.5327 22.551 10.0687 22.773C10.4709 22.9395 10.9806 22.9395 12 22.9395C13.0195 22.9395 13.5291 22.9395 13.9313 22.773C14.4673 22.551 14.8933 22.125 15.1153 21.5889C15.2167 21.3442 15.2564 21.0596 15.2719 20.6444C15.2947 20.0343 15.6075 19.4696 16.1362 19.1643C16.665 18.859 17.3105 18.8705 17.8504 19.1558C18.2176 19.3498 18.4839 19.4577 18.7464 19.4923C19.3217 19.5681 19.9036 19.4122 20.3639 19.059C20.7092 18.794 20.9641 18.3526 21.4738 17.4697C21.9835 16.5868 22.2384 16.1454 22.2952 15.714C22.3709 15.1387 22.215 14.5568 21.8618 14.0964C21.7005 13.8863 21.4739 13.7096 21.1222 13.4886C20.6053 13.1639 20.2726 12.6104 20.2726 11.9999S20.6053 10.8361 21.1222 10.5113C21.474 10.2903 21.7007 10.1137 21.8619 9.9034C22.2151 9.4431 22.371 8.8613 22.2953 8.286C22.2385 7.8545 21.9837 7.4131 21.4739 6.5302C20.9642 5.6474 20.7093 5.2059 20.3641 4.941C19.9037 4.5878 19.3218 4.4319 18.7465 4.5076C18.484 4.5422 18.2177 4.6501 17.8504 4.8442C17.3106 5.1295 16.6651 5.1409 16.1364 4.8357C15.6075 4.5304 15.2947 3.9656 15.2719 3.3555C15.2564 2.9404 15.2167 2.6558 15.1153 2.4111C14.8933 1.875 14.4673 1.4491 13.9313 1.227Z"
        stroke="#000000"
        strokeWidth="1.5"
      ></path>
    </svg>
  )
}
const MenuIcon = () => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      fill="none"
      viewBox="-0.5 -0.5 24 24"
      className="w-7 h-7 opacity-65 "
      id="Flip--Streamline-Rounded----Material-Symbols"
    >
      <path
        fill="#000"
        d="M15.4488125 4.3125C15.244064583333333 4.3125 15.073768750000001 4.243178958333334 14.938020833333335 4.104541666666667C14.802272916666666 3.9660624999999996 14.734375 3.7943627083333333 14.734375 3.5894375C14.734375 3.3846752083333334 14.803710416666668 3.2144081250000003 14.942333333333334 3.0786458333333333C15.0808125 2.9428835416666668 15.252497916666666 2.875 15.457437500000001 2.875C15.662185416666668 2.875 15.83248125 2.9443210416666665 15.968229166666669 3.0829583333333335C16.103977083333334 3.2214375 16.171875 3.393137291666667 16.171875 3.5980625C16.171875 3.8028247916666666 16.102539583333336 3.973091875 15.963916666666668 4.108854166666666C15.825437500000001 4.244616458333334 15.653752083333334 4.3125 15.4488125 4.3125ZM19.4019375 4.3125C19.197189583333333 4.3125 19.026893750000003 4.243178958333334 18.891145833333333 4.104541666666667C18.755397916666666 3.9660624999999996 18.6875 3.7943627083333333 18.6875 3.5894375C18.6875 3.3846752083333334 18.756835416666668 3.2144081250000003 18.895458333333334 3.0786458333333333C19.0339375 2.9428835416666668 19.205622916666666 2.875 19.4105625 2.875C19.61531041666667 2.875 19.78560625 2.9443210416666665 19.921354166666667 3.0829583333333335C20.057102083333334 3.2214375 20.125 3.393137291666667 20.125 3.5980625C20.125 3.8028247916666666 20.055664583333336 3.973091875 19.91704166666667 4.108854166666666C19.7785625 4.244616458333334 19.606877083333334 4.3125 19.4019375 4.3125ZM19.4019375 8.265625C19.197189583333333 8.265625 19.026893750000003 8.196289583333334 18.891145833333333 8.057666666666666C18.755397916666666 7.9191875000000005 18.6875 7.747502083333334 18.6875 7.5425625C18.6875 7.337814583333334 18.756835416666668 7.16751875 18.895458333333334 7.031770833333334C19.0339375 6.896022916666667 19.205622916666666 6.828125 19.4105625 6.828125C19.61531041666667 6.828125 19.78560625 6.897460416666667 19.921354166666667 7.036083333333333C20.057102083333334 7.1745625 20.125 7.346247916666667 20.125 7.5511875C20.125 7.7559354166666665 20.055664583333336 7.92623125 19.91704166666667 8.061979166666667C19.7785625 8.197727083333334 19.606877083333334 8.265625 19.4019375 8.265625ZM19.4019375 12.21875C19.197189583333333 12.21875 19.026893750000003 12.149414583333334 18.891145833333333 12.010791666666666C18.755397916666666 11.872312500000001 18.6875 11.700627083333334 18.6875 11.4956875C18.6875 11.290939583333333 18.756835416666668 11.120643750000001 18.895458333333334 10.984895833333335C19.0339375 10.849147916666666 19.205622916666666 10.78125 19.4105625 10.78125C19.61531041666667 10.78125 19.78560625 10.850585416666668 19.921354166666667 10.989208333333334C20.057102083333334 11.1276875 20.125 11.299372916666666 20.125 11.504312500000001C20.125 11.709060416666667 20.055664583333336 11.87935625 19.91704166666667 12.015104166666667C19.7785625 12.150852083333334 19.606877083333334 12.21875 19.4019375 12.21875ZM19.4019375 16.171875C19.197189583333333 16.171875 19.026893750000003 16.102539583333336 18.891145833333333 15.963916666666668C18.755397916666666 15.825437500000001 18.6875 15.653752083333334 18.6875 15.4488125C18.6875 15.244064583333333 18.756835416666668 15.073768750000001 18.895458333333334 14.938020833333335C19.0339375 14.802272916666666 19.205622916666666 14.734375 19.4105625 14.734375C19.61531041666667 14.734375 19.78560625 14.803710416666668 19.921354166666667 14.942333333333334C20.057102083333334 15.0808125 20.125 15.252497916666666 20.125 15.457437500000001C20.125 15.662185416666668 20.055664583333336 15.83248125 19.91704166666667 15.968229166666669C19.7785625 16.103977083333334 19.606877083333334 16.171875 19.4019375 16.171875ZM15.4488125 20.125C15.244064583333333 20.125 15.073768750000001 20.055664583333336 14.938020833333335 19.91704166666667C14.802272916666666 19.7785625 14.734375 19.606877083333334 14.734375 19.4019375C14.734375 19.197189583333333 14.803710416666668 19.026893750000003 14.942333333333334 18.891145833333333C15.0808125 18.755397916666666 15.252497916666666 18.6875 15.457437500000001 18.6875C15.662185416666668 18.6875 15.83248125 18.756835416666668 15.968229166666669 18.895458333333334C16.103977083333334 19.0339375 16.171875 19.205622916666666 16.171875 19.4105625C16.171875 19.61531041666667 16.102539583333336 19.78560625 15.963916666666668 19.921354166666667C15.825437500000001 20.057102083333334 15.653752083333334 20.125 15.4488125 20.125ZM19.4019375 20.125C19.197189583333333 20.125 19.026893750000003 20.055664583333336 18.891145833333333 19.91704166666667C18.755397916666666 19.7785625 18.6875 19.606877083333334 18.6875 19.4019375C18.6875 19.197189583333333 18.756835416666668 19.026893750000003 18.895458333333334 18.891145833333333C19.0339375 18.755397916666666 19.205622916666666 18.6875 19.4105625 18.6875C19.61531041666667 18.6875 19.78560625 18.756835416666668 19.921354166666667 18.895458333333334C20.057102083333334 19.0339375 20.125 19.205622916666666 20.125 19.4105625C20.125 19.61531041666667 20.055664583333336 19.78560625 19.91704166666667 19.921354166666667C19.7785625 20.057102083333334 19.606877083333334 20.125 19.4019375 20.125ZM4.3125 20.125C3.9171875000000007 20.125 3.578814375 19.984220833333335 3.2973854166666667 19.702614583333332C3.0157935416666666 19.4212 2.875 19.082812500000003 2.875 18.6875V4.3125C2.875 3.9171875000000007 3.0157935416666666 3.5787377083333336 3.2973854166666667 3.2971458333333334C3.578814375 3.015716875 3.9171875000000007 2.875 4.3125 2.875H7.642708333333333C7.846354166666667 2.875 8.01708125 2.9443210416666665 8.154937499999999 3.0829583333333335C8.292602083333334 3.2214375 8.361458333333333 3.393137291666667 8.361458333333333 3.5980625C8.361458333333333 3.8028247916666666 8.292602083333334 3.973091875 8.154937499999999 4.108854166666666C8.01708125 4.244616458333334 7.846354166666667 4.3125 7.642708333333333 4.3125H4.3125V18.6875H7.642708333333333C7.846354166666667 18.6875 8.01708125 18.756835416666668 8.154937499999999 18.895458333333334C8.292602083333334 19.0339375 8.361458333333333 19.205622916666666 8.361458333333333 19.4105625C8.361458333333333 19.61531041666667 8.292602083333334 19.78560625 8.154937499999999 19.921354166666667C8.01708125 20.057102083333334 7.846354166666667 20.125 7.642708333333333 20.125H4.3125ZM10.829166666666667 21.322916666666668V1.6770833333333335C10.829166666666667 1.4734375000000002 10.898502083333334 1.3026960416666666 11.037125 1.1648541666666667C11.175604166666668 1.0271752083333334 11.347289583333334 0.9583333333333334 11.552229166666669 0.9583333333333334C11.756977083333334 0.9583333333333334 11.927272916666666 1.0271752083333334 12.063020833333335 1.1648541666666667C12.198768750000001 1.3026960416666666 12.266666666666667 1.4734375000000002 12.266666666666667 1.6770833333333335V21.322916666666668C12.266666666666667 21.5265625 12.197331250000001 21.697241666666667 12.058708333333334 21.83490625C11.920229166666667 21.9727625 11.74854375 22.041666666666668 11.543604166666668 22.041666666666668C11.33885625 22.041666666666668 11.168560416666667 21.9727625 11.0328125 21.83490625C10.897064583333334 21.697241666666667 10.829166666666667 21.5265625 10.829166666666667 21.322916666666668Z"
        strokeWidth="1"
      ></path>
    </svg>
  )
}
export default function Profile() {
  const [selectedMenuKey, setSelectedMenuKey] = useState('1');
  const userFromLocalStorage = JSON.parse(localStorage.getItem('userInfo'));
  const userNameLogin = userFromLocalStorage?.login || 'none';
  const avatar = userFromLocalStorage?.avatar || DefaultAvatar; 

  const dispatch = useDispatch();
  const userId = userFromLocalStorage.id;
  const page = 1;
  const pageSize = 100;
  const { t } = useTranslation();
  
 
  const handleMenuClick = (e) => {
    setSelectedMenuKey(e.key); 
  };
  const handleSettingsClick = () => {
    setSelectedMenuKey('4'); 
  };
  // Menu items
  const menu = (
    <Menu onClick={handleMenuClick}>
      <Menu.Item key="1">{t('phone_profile.menu_item_1')}</Menu.Item>
      <Menu.Item key="2">{t('phone_profile.menu_item_2')}</Menu.Item>
      <Menu.Item key="3">{t('phone_profile.menu_item_3')}</Menu.Item>
    </Menu>
  );
  return (
    <div className="w-full h-screen bg-slate-50">
      <Helmet>
        <title>{userNameLogin}</title>
      </Helmet>
      <div className="h-full pb-20 lg:pb-4">
        <div className="h-full p-3 overflow-auto scrollable-content">
          <header className="flex items-center justify-end mt-4 mb-5">
            <div className="flex items-center gap-4">
              <button type="button" onClick={handleSettingsClick}>
                <SettingIcon />
              </button>
              <Dropdown overlay={menu} trigger={['click']}>
                <button type="button">
                  <MenuIcon />
                </button>
              </Dropdown>
            </div>
          </header>
          {selectedMenuKey === '1' && (
            <div className="flex items-center gap-4 mb-4">
              <Avatar
                size={64}
                src={avatar}
                icon={<img src={DefaultAvatar} alt="Default Avatar" />}
                className="mr-4"
              />
              <div>
                <Title level={5}>{userFromLocalStorage?.login || 'none'}</Title>
                <span className="">
                  {' '}
                  {t('personal_settings_key_menu_01.your_personal_account')}
                </span>
              </div>
            </div>
          )}
          {selectedMenuKey === '2' && (
            <KeyMenu02/>
          )}
          {selectedMenuKey === '3' && (
           <KeyMenu03/>
          )}
          {selectedMenuKey === '4' && (
            <PhoneGeneralSettings/>
          )}
        </div>
      </div>
    </div>
  )
}
